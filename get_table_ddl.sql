SELECT ddl
FROM 	(
		--CREATE TABLE
		SELECT n.nspname AS schema_name, c.relname AS table_name, 2 AS seq,
		'CREATE TABLE "' || n.nspname || '"."' || c.relname || '"' AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		WHERE c.relkind = 'r'
		UNION ALL --OPEN PAREN COLUMN LIST
		SELECT n.nspname AS schema_name, c.relname AS table_name, 5 AS seq, 
		'(' AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		WHERE c.relkind = 'r'
		UNION ALL --COLUMN LIST
		SELECT schema_name, table_name, seq, 
		'\t' || col_delim || col_name || ' ' || col_datatype || ' ' || col_nullable || ' ' || col_default || ' ' || col_encoding AS ddl
		FROM
		( 
		SELECT n.nspname AS schema_name, c.relname AS table_name, 100000000 + a.attnum AS seq,
		CASE WHEN a.attnum > 1 THEN ',' ELSE '' END AS col_delim,
		'"' || a.attname || '"' AS col_name,
		format_type(a.atttypid, a.atttypmod) AS col_datatype,
		CASE WHEN format_encoding((a.attencodingtype)::integer) = 'none' THEN 'ENCODE RAW' ELSE 'ENCODE ' || format_encoding((a.attencodingtype)::integer) END AS col_encoding,
		CASE 	WHEN adef.adsrc LIKE '%default_identity%' THEN 'generated by default as identity(' || SPLIT_PART(SPLIT_PART(adef.adsrc, ',', 3), '''', 2) || ',' || SPLIT_PART(SPLIT_PART(adef.adsrc, ',', 4), '''', 1) || ')'
			WHEN adef.adsrc LIKE '%"identity"%' THEN 'identity(' || SPLIT_PART(SPLIT_PART(adef.adsrc, ',', 3), '''', 2) || ',' || SPLIT_PART(SPLIT_PART(adef.adsrc, ',', 4), '''', 1) || ')' 
			WHEN a.atthasdef IS TRUE THEN 'DEFAULT ' || adef.adsrc ELSE '' END AS col_default,
		CASE WHEN a.attnotnull IS TRUE THEN 'NOT NULL' ELSE '' END AS col_nullable
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		JOIN pg_attribute AS a ON c.oid = a.attrelid
		LEFT OUTER JOIN pg_attrdef AS adef ON a.attrelid = adef.adrelid AND a.attnum = adef.adnum
		WHERE c.relkind = 'r' AND a.attnum > 0
		ORDER BY a.attnum
		)
		UNION ALL --CONSTRAINT LIST
		(
		SELECT n.nspname AS schema_name, c.relname AS table_name, 200000000 + MOD(CAST(con.oid AS INT),100000000) AS seq, 
		'\t,' || pg_get_constraintdef(con.oid) AS ddl
		FROM pg_constraint AS con
		JOIN pg_class AS c ON c.relnamespace = con.connamespace AND c.oid = con.conrelid
		JOIN pg_namespace AS n ON n.oid = c.relnamespace
		WHERE c.relkind = 'r' AND pg_get_constraintdef(con.oid) NOT LIKE 'FOREIGN KEY%'
		ORDER BY seq)
		UNION ALL --CLOSE PAREN COLUMN LIST
		SELECT n.nspname AS schema_name, c.relname AS table_name, 299999999 AS seq, 
		')' AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		WHERE c.relkind = 'r'
		UNION ALL --BACKUP
		SELECT n.nspname AS schema_name, c.relname AS table_name, 300000000 AS seq,
		'BACKUP NO' as ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		JOIN 	(
			SELECT SPLIT_PART(key,'_',5) id
			FROM pg_conf conf
			JOIN pg_database d ON SPLIT_PART(conf.key,'_',4) = d.oid AND conf.key LIKE 'pg_class_backup_%'
			WHERE datname = current_database()
			) AS sub ON sub.id = c.oid
		WHERE c.relkind = 'r'
		UNION ALL --DISTSTYLE
		SELECT n.nspname AS schema_name, c.relname AS table_name, 300000001 AS seq,
		CASE 	WHEN c.reldiststyle = 0 THEN 'DISTSTYLE EVEN'
			WHEN c.reldiststyle = 1 THEN 'DISTSTYLE KEY'
			WHEN c.reldiststyle = 8 THEN 'DISTSTYLE ALL'
			WHEN c.reldiststyle = 9 THEN 'DISTSTYLE AUTO'
			ELSE '<<Error - UNKNOWN DISTSTYLE>>'
		END AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		WHERE c.relkind = 'r'
		UNION ALL --DISTKEY COLUMNS
		SELECT n.nspname AS schema_name, c.relname AS table_name, 400000000 + a.attnum AS seq, 
		' DISTKEY ("' || a.attname || '")' AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		JOIN pg_attribute AS a ON c.oid = a.attrelid
		WHERE c.relkind = 'r'
		AND a.attisdistkey IS TRUE
		AND a.attnum > 0
		UNION ALL --SORTKEY COLUMNS
		SELECT schema_name, table_name, seq,
		CASE WHEN min_sort < 0 THEN 'INTERLEAVED SORTKEY (' ELSE ' SORTKEY (' END AS ddl
		FROM 	(SELECT n.nspname AS schema_name, c.relname AS table_name, 499999999 AS seq, min(attsortkeyord) min_sort 
			FROM pg_namespace AS n
			JOIN  pg_class AS c ON n.oid = c.relnamespace
			JOIN pg_attribute AS a ON c.oid = a.attrelid
			WHERE c.relkind = 'r'
			AND abs(a.attsortkeyord) > 0
			AND a.attnum > 0
			group by n.nspname, c.relname
			)
		UNION ALL
		(
		SELECT n.nspname AS schema_name, c.relname AS table_name, 500000000 + abs(a.attsortkeyord) AS seq, 
		CASE WHEN abs(a.attsortkeyord) = 1 THEN '\t' || '"' || a.attname || '"' ELSE '\t, ' || '"' || a.attname || '"' END AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		JOIN pg_attribute AS a ON c.oid = a.attrelid
		WHERE c.relkind = 'r'
		AND abs(a.attsortkeyord) > 0
		AND a.attnum > 0
		ORDER BY abs(a.attsortkeyord)
		)
		UNION ALL --CLOSE PARAN
		SELECT n.nspname AS schema_name, c.relname AS table_name, 599999999 AS seq,
		'\t)' AS ddl
		FROM pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		JOIN pg_attribute AS a ON c.oid = a.attrelid
		WHERE c.relkind = 'r'
		AND abs(a.attsortkeyord) = 1
		AND a.attnum > 0
		UNION ALL --END SEMICOLON
		SELECT n.nspname AS schema_name, c.relname AS table_name, 600000000 AS seq, 
		';' AS ddl
		FROM  pg_namespace AS n
		JOIN pg_class AS c ON n.oid = c.relnamespace
		WHERE c.relkind = 'r' 
) 
WHERE schema_name = :schema_name AND table_name = :table_name
ORDER BY seq;
